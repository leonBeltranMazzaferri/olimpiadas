services:
  # MySQL Database Service
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: turismoROOT
      MYSQL_DATABASE: agencia_paquetes
      MYSQL_USER: agencia_turismo
      MYSQL_PASSWORD: turismoUSER
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database.sql:/docker-entrypoint-initdb.d/database.sql:ro
    networks:
      - app-network

  # Node.js Backend Service
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: nodejs_backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: "production"
      SECRET_KEY: "hola"
      DB_NAME: "agencia_paquetes"
      DB_PASSWORD: "turismoROOT"
      MP_ACCESS_TOKEN: "APP_USR-2074455333141563-061922-fa3536675990eaa085d87dee5cc40ef7-803751234"
    depends_on:
      - mysql
    volumes:
      - ./static:/app/static:ro  # Mount static files
    networks:
      - app-network

  # Nginx for serving static files (optional)
  nginx:
    image: nginx:alpine
    container_name: static_server
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./static:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge